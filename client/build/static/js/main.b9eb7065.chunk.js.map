{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","url","setUrl","className","action","method","for","id","type","name","value","onChange","e","target","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LA2EeA,MAxEf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACJC,EADI,KACCC,EADD,KAGX,OACI,sBAAKC,UAAU,MAAf,UACI,sBAAKA,UAAU,YAAf,UACI,yEACA,8CACA,+BACI,qDACwB,IACpB,kEAFJ,4DAII,uBAJJ,YAKc,IACV,iCACK,IADL,gDAEK,UAGT,kFACqD,IACjD,2EAAqD,IAFzD,uDAGyD,IACrD,iCACK,IADL,wBAC+B,OAE/B,uBAPJ,0FASwC,IACpC,wDAVJ,YAU+C,IAC3C,uCAXJ,mBAaA,6GAMJ,qDACA,0CACa,uEADb,KACgE,IAC5D,6DAEJ,uBAAMC,OAAO,eAAeC,OAAO,OAAnC,UACI,uBAAOC,IAAI,YAAX,iCACA,uBACIC,GAAG,YACHC,KAAK,OACLC,KAAK,MACLC,MAAOT,EACPU,SAAU,SAACC,GAAD,OAAOV,EAAOU,EAAEC,OAAOH,UAErC,uBAAOF,KAAK,SAASE,MAAM,gBAE/B,gDACA,mBAAGI,KAAK,gDAAR,+CAIA,mDACA,uEAEJ,qBAAKX,UAAU,SAAf,SACI,oCACO,mBAAGW,KAAK,+BAAR,mCCxDRC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.b9eb7065.chunk.js","sourcesContent":["import './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n    const [url, setUrl] = useState('');\n\n    return (\n        <div className=\"app\">\n            <div className=\"container\">\n                <h2>API Project: URL Shortener Microservice</h2>\n                <h3>User Story: </h3>\n                <ol>\n                    <li>\n                        I can POST a URL to{' '}\n                        <code>[project_url]/api/shorturl/new</code> and I will\n                        receive a shortened URL in the JSON response.\n                        <br />\n                        Example :{' '}\n                        <code>\n                            {'{'}\"original_url\":\"www.google.com\",\"short_url\":1\n                            {'}'}\n                        </code>\n                    </li>\n                    <li>\n                        If I pass an invalid URL that doesn't follow the{' '}\n                        <code>http(s)://www.example.com(/more/routes)</code>{' '}\n                        format, the JSON response will contain an error like{' '}\n                        <code>\n                            {'{'}\"error\":\"invalid URL\"{'}'}\n                        </code>\n                        <br />\n                        HINT: to be sure that the submitted url points to a\n                        valid site you can use the function{' '}\n                        <code>dns.lookup(host, cb)</code> from the{' '}\n                        <code>dns</code> core module.\n                    </li>\n                    <li>\n                        When I visit the shortened URL, it will redirect me to\n                        my original link.\n                    </li>\n                </ol>\n\n                <h3>Short URL Creation </h3>\n                <p>\n                    example: <code>POST [project_url]/api/shorturl/new</code> -{' '}\n                    <code>https://www.google.com</code>\n                </p>\n                <form action=\"api/shorturl\" method=\"POST\">\n                    <label for=\"url_input\">URL to be shortened</label>\n                    <input\n                        id=\"url_input\"\n                        type=\"text\"\n                        name=\"url\"\n                        value={url}\n                        onChange={(e) => setUrl(e.target.value)}\n                    />\n                    <input type=\"submit\" value=\"POST URL\" />\n                </form>\n                <h3>Example Usage:</h3>\n                <a href=\"https://thread-paper.glitch.me/api/shorturl/3\">\n                    [this_project_url]/api/shorturl/3\n                </a>\n\n                <h3>Will Redirect to:</h3>\n                <p>https://www.freecodecamp.org/forum/</p>\n            </div>\n            <div className=\"footer\">\n                <p>\n                    by <a href=\"https://www.freecodecamp.org\">freeCodeCamp</a>\n                </p>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}